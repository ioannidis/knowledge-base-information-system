package eu.ioannidis.vulnerabilityservice.services;

import eu.ioannidis.vulnerabilityservice.models.entities.VulnerabilityEntity;
import eu.ioannidis.vulnerabilityservice.models.valueobjects.vulnerabiltyfilters.VulnerabilityFilters;
import eu.ioannidis.vulnerabilityservice.utils.enums.StatusEnum;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.data.domain.Slice;
import org.springframework.data.jpa.domain.Specification;

import java.util.List;
import java.util.Optional;
import java.util.UUID;


public interface VulnerabilityService {

    List<VulnerabilityEntity> findAll();

    Page<VulnerabilityEntity> findAll(Pageable pageable);

    Page<VulnerabilityEntity> findAll(Pageable pageable, VulnerabilityFilters vulnerabilityFilters);

    List<VulnerabilityEntity> findTop10ByOrderByModifiedAtDesc();

//    List<VulnerabilityEntity> findAllByStatusOrStatusOrderByModifiedAtDesc(StatusEnum statusOne, StatusEnum statusTwo);
    List<VulnerabilityEntity> findAllByStatusInOrderByModifiedAtDesc(List<StatusEnum> statusEnums);

    Optional<VulnerabilityEntity> findById(UUID id);

    <S extends VulnerabilityEntity> S save(S entity);

    void deleteById(UUID id);

    boolean existById(UUID id);

    long count();

    long countVulnerabilityEntitiesById(StatusEnum status);

}
